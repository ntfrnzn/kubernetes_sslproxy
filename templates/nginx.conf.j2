user nobody nogroup;
worker_processes  1;

error_log /dev/stderr info;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;

    log_format main '{'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"host":"$host",'
            '"hostname":"$hostname",'
            '"http_forwarded":"$http_forwarded",'
            '"http_referer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"http_x_forwarded_for":"$http_x_forwarded_for",'
            '"query_string":"$query_string",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request_method":"$request_method",'
            '"request_time":"$request_time",'
            '"request":"$request",'
            '"scheme":"$scheme",'
            '"server_port":"$server_port",'
            '"status":"$status",'
            '"time_iso8601":"$time_iso8601",'
            '"upstream_addr":"$upstream_addr",'
            '"upstream_response_time":"$upstream_response_time",'
            '"upstream_status":"$upstream_status"'
    '}';

    access_log  /dev/stdout  main;
    error_log  /dev/stdout  debug;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    upstream proxyserver {
        server {{ service_name }};
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 default_server;
        server_name  _;

        ssl on;

        ssl_certificate /etc/secrets/{{ service_name }}.crt;
        ssl_certificate_key /etc/secrets/{{ service_name }}.key;
        ssl_dhparam /etc/secrets/dhparam;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-RC4-SHA:AES128-GCM-SHA256:HIGH:!RC4:!MD5:!aNULL:!EDH:!CAMELLIA;
        ssl_prefer_server_ciphers on;

        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        location / {
            access_log  /dev/stdout main;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection 'Keep-Alive';

            proxy_pass http://proxyserver/;
        }

        error_page  404 500 502 503 504 /error.html;
        location = /error.html {
            root   html;
        }
    }
}
